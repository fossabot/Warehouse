

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                from components.kotlin
                groupId 'org.raddad'
                artifactId 'warehouse'
                version System.getenv("GET_VERSION")
            }
        }

        repositories {
            maven {
                name = "GitHubPackages"

                url = uri("https://maven.pkg.github.com/osama-raddad/Warehouse")
                credentials {
                    username = System.getenv("USER_NAME")
                    password = System.getenv("TOKEN")
                }
            }
        }
    }
}
//publishing {
//    publications {
//        release(MavenPublication) {
//            from components.kotlin
//            groupId 'org.raddad'
//            artifactId 'wherehouse'
//            version '1.0.0'
//        }
//    }
//    repositories {
//        maven {
//            url = "http://my.org.server/repo/url"
//            credentials {
//                username = 'alice'
//                password = 'my-password'
//            }
//        }
//    }
//}

//publishing {
//    repositories {
//        maven {
//            name = "GitHubPackages"
//            url = uri("https://maven.pkg.github.com/${myGithubUsername}/${myArtifactId}")
//            credentials {
//                username = System.getenv("GITHUB_PACKAGES_USERID")
//                password = System.getenv("GITHUB_PACKAGES_PUBLISH_TOKEN")
//            }
//        }
//    }
//}
//
//publishing {
//    publications {
//        register("gprRelease", MavenPublication::class) {
//            groupId = myArtifactGroup
//            artifactId = myArtifactId
//            version = myArtifactVersion
//
//            from(components["java"])
//
//            artifact(sourcesJar)
//            artifact(dokkaJavadocJar)
//
//            pom {
//                packaging = "jar"
//                name.set(myArtifactId)
//                description.set(myGithubDescription)
//                url.set(myGithubHttpUrl)
//                scm {
//                    url.set(myGithubHttpUrl)
//                }
//                issueManagement {
//                    url.set(myGithubIssueTrackerUrl)
//                }
//                licenses {
//                    license {
//                        name.set(myLicense)
//                        url.set(myLicenseUrl)
//                    }
//                }
//                developers {
//                    developer {
//                        id.set(myGithubUsername)
//                        name.set(myDeveloperName)
//                    }
//                }
//            }
//
//        }
//    }
//}